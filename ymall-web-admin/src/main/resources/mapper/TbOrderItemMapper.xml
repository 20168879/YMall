<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuu.ymall.web.admin.mapper.TbOrderItemMapper">
  <resultMap id="BaseResultMap" type="com.yuu.ymall.domain.TbOrderItem">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="item_id" jdbcType="VARCHAR" property="itemId" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="total_fee" jdbcType="DECIMAL" property="totalFee" />
    <result column="pic_path" jdbcType="VARCHAR" property="picPath" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_order_item
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yuu.ymall.domain.TbOrderItem">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_order_item (item_id, order_id, num, 
      title, price, total_fee, 
      pic_path, created, updated
      )
    values (#{itemId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{totalFee,jdbcType=DECIMAL}, 
      #{picPath,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.yuu.ymall.domain.TbOrderItem">
    update tb_order_item
    set item_id = #{itemId,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      total_fee = #{totalFee,jdbcType=DECIMAL},
      pic_path = #{picPath,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, item_id, order_id, num, title, price, total_fee, pic_path, created, updated
    from tb_order_item
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, item_id, order_id, num, title, price, total_fee, pic_path, created, updated
    from tb_order_item
  </select>

    <!-- 获取本周热门商品 -->
    <select id="getWeekHot" resultType="TbOrderItem">
        SELECT
        i.title,
        i.pic_path picPath,
        count(*) total
        FROM
        tb_order_item i
        LEFT JOIN tb_order o ON i.order_id = o.order_id
        WHERE
        YEARWEEK(date_format(o.create_time, '%Y-%m-%d'), 1) = YEARWEEK(now(), 1)
        AND o.status = 4
        GROUP BY
        i.item_id
        ORDER BY
        COUNT(*) DESC
    </select>
</mapper>